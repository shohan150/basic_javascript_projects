let scrollContainer = document.querySelector('.gallery');
let backBtn = document.getElementById('backbtn');
let nextBtn = document.getElementById('nextbtn');

scrollContainer.addEventListener('wheel', (event) => {
    event.preventDefault();
    scrollContainer.scrollLeft += event.deltaY;
    scrollContainer.style.scrollBehavior = 'auto';
    // scrollLeft is a property of the scrollContainer element that represents the current horizontal scroll position of the container. By modifying this property, you can scroll the content within the container left or right.

    // event.deltaY: This property is part of the event object and represents the vertical scroll amount generated by the mouse wheel. When you scroll the mouse wheel, it generates positive or negative values for event.deltaY to indicate the direction and intensity of the scroll. Positive values typically mean scrolling down, and negative values mean scrolling up. By adding event.deltaY to the current scrollLeft value, you are effectively scrolling the content inside scrollContainer to the left or right, depending on the direction of the mouse wheel scroll.

    // auto: is the default behavior. Scrolling occurs instantly when the user interacts with a scrollbar or scroll event. It doesn't provide any smooth scrolling animation. I used auto here just like that to see the difffernce betwwen the two types.

    // smooth: This value enables smooth scrolling behavior. When users interact with scrollbars or trigger a scroll event, the scrolling motion is animated, resulting in a smoother and more visually pleasing scroll.

})

backBtn.addEventListener('click', () => {
    scrollContainer.style.scrollBehavior = 'smooth';
    scrollContainer.scrollLeft -= 900;
})
nextBtn.addEventListener('click', () => {
    scrollContainer.style.scrollBehavior = 'smooth';
    scrollContainer.scrollLeft += 900;
})